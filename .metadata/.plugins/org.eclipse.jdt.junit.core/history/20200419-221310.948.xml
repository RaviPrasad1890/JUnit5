<?xml version="1.0" encoding="UTF-8"?><testrun name="StringTest" project="jUnit5" tests="15" started="15" failures="0" errors="0" ignored="0">
  <testsuite name="com.ravi.junit5.StringTest" time="0.069" displayname="StringTest" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]">
    <testsuite name="testParemetrizedFromCsv(com.ravi.junit5.StringTest)" time="0.0" displayname="testParemetrizedFromCsv(String, String)" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[test-template:testParemetrizedFromCsv(java.lang.String, java.lang.String)]">
      <testcase name="testParemetrizedFromCsv" classname="com.ravi.junit5.StringTest" time="0.0" dynamicTest="true" displayname="[1] abcde, ABCDE" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[test-template:testParemetrizedFromCsv(java.lang.String, java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="testParemetrizedFromCsv" classname="com.ravi.junit5.StringTest" time="0.0" dynamicTest="true" displayname="[2] ," parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[test-template:testParemetrizedFromCsv(java.lang.String, java.lang.String)]/[test-template-invocation:#2]"/>
      <testcase name="testParemetrizedFromCsv" classname="com.ravi.junit5.StringTest" time="0.0" dynamicTest="true" displayname="[3] abc, ABC" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[test-template:testParemetrizedFromCsv(java.lang.String, java.lang.String)]/[test-template-invocation:#3]"/>
      <testcase name="testParemetrizedFromCsv" classname="com.ravi.junit5.StringTest" time="0.0" dynamicTest="true" displayname="[4] ravi, RAVI" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[test-template:testParemetrizedFromCsv(java.lang.String, java.lang.String)]/[test-template-invocation:#4]"/>
      <testcase name="testParemetrizedFromCsv" classname="com.ravi.junit5.StringTest" time="0.015" dynamicTest="true" displayname="[5] xyz, XYZ" parameters="java.lang.String,java.lang.String" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[test-template:testParemetrizedFromCsv(java.lang.String, java.lang.String)]/[test-template-invocation:#5]"/>
    </testsuite>
    <testcase name="testSplit" classname="com.ravi.junit5.StringTest" time="0.023" displayname="testSplit()" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[method:testSplit()]"/>
    <testsuite name="testBasicParameterizedTest(com.ravi.junit5.StringTest)" time="0.0" displayname="testBasicParameterizedTest(String)" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[test-template:testBasicParameterizedTest(java.lang.String)]">
      <testcase name="testBasicParameterizedTest" classname="com.ravi.junit5.StringTest" time="0.0" dynamicTest="true" displayname="[1] ABCD" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[test-template:testBasicParameterizedTest(java.lang.String)]/[test-template-invocation:#1]"/>
      <testcase name="testBasicParameterizedTest" classname="com.ravi.junit5.StringTest" time="0.0" dynamicTest="true" displayname="[2] ABC" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[test-template:testBasicParameterizedTest(java.lang.String)]/[test-template-invocation:#2]"/>
      <testcase name="testBasicParameterizedTest" classname="com.ravi.junit5.StringTest" time="0.015" dynamicTest="true" displayname="[3] DE" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[test-template:testBasicParameterizedTest(java.lang.String)]/[test-template-invocation:#3]"/>
      <testcase name="testBasicParameterizedTest" classname="com.ravi.junit5.StringTest" time="0.0" dynamicTest="true" displayname="[4] dsdsh" parameters="java.lang.String" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[test-template:testBasicParameterizedTest(java.lang.String)]/[test-template-invocation:#4]"/>
    </testsuite>
    <testcase name="testContains" classname="com.ravi.junit5.StringTest" time="0.0" displayname="testContains()" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[method:testContains()]"/>
    <testcase name="testLengthException" classname="com.ravi.junit5.StringTest" time="0.0" displayname="testLengthException()" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[method:testLengthException()]"/>
    <testcase name="testStringEquals" classname="com.ravi.junit5.StringTest" time="0.0" displayname="When I/P String is null, throw an Exception" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[method:testStringEquals()]"/>
    <testcase name="testLengthBasic" classname="com.ravi.junit5.StringTest" time="0.016" displayname="testLengthBasic()" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[method:testLengthBasic()]"/>
    <testcase name="testToUppercaseBasic" classname="com.ravi.junit5.StringTest" time="0.0" displayname="testToUppercaseBasic()" uniqueid="[engine:junit-jupiter]/[class:com.ravi.junit5.StringTest]/[method:testToUppercaseBasic()]"/>
  </testsuite>
</testrun>
